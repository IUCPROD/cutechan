{% import "meguca/lang" %}
{% import "meguca/auth" %}

CreateBoard renders a the form for creating new boards
{% func CreateBoard() %}{% stripspace %}
	{%= tableForm(specs["createBoard"]) %}
{% endstripspace %}{% endfunc %}

Form formatted as a table, with cancel and submit buttons
{% func tableForm(specs []inputSpec) %}{% stripspace %}
	{%= table(specs) %}
	{%= submit(true) %}
{% endstripspace %}{% endfunc %}

Render submit and cancel buttons
{% func submit(cancel bool) %}{% stripspace %}
	<input type="submit" value="{%s lang.Get().UI["submit"] %}">
	{% if cancel %}
		{%= cancel() %}
	{% endif %}
	<div class="form-response"></div>
{% endstripspace %}{% endfunc %}

Renders a cancel button
{% func cancel() %}{% stripspace %}
	<input type="button" name="cancel" value="{%s lang.Get().UI["cancel"] %}">
{% endstripspace %}{% endfunc %}

Renders the tab selection butts in tabbed windows
{% func tabButts(names []string) %}{% stripspace %}
	<div class="tab-butts">
		{% for i, n := range names %}
			<a class="tab-link{% if i == 0 %}{% space %}tab-sel{% endif %}" data-id="{%d i %}">
				{%s n %}
			</a>
		{% endfor %}
	</div>
{% endstripspace %}{% endfunc %}

{% func faqModal() %}{% stripspace %}
	<div id="FAQ" class="modal">
		cutechan is licensed under the{% space %}
		<a href="https://www.gnu.org/licenses/agpl.html" target="_blank">
			GNU Affero General Public License
		</a>
		<br>
		source code repository:{% space %}
		<a href="https://github.com/cutechan/cutechan" target="_blank">
			github.com/cutechan/cutechan
		</a>
		<br>
		original project:{% space %}
		<a href="https://github.com/bakape/meguca" target="_blank">
			github.com/bakape/meguca
		</a>
		<br>
		contacts:{% space %}
		<a href="mailto:kagami@genshiken.org">
			kagami@genshiken.org
		</a>
	</div>
{% endstripspace %}{% endfunc %}

{% func accountModal(ss *auth.Session) %}{% stripspace %}
	{% code f := lang.Get().Forms %}
	<div class="modal tab-modal" id="account-panel">
		{% if ss == nil %}
			{%= tabButts([]string{f["id"][0], f["register"][0]}) %}
			<div class="tab-cont">
				<div class="tab-sel" data-id="0">
					<form id="login-form">
						{%= table(specs["login"]) %}
						{%= submit(false) %}
					</form>
				</div>
				<div data-id="1">
					<form id="registration-form">
						{%= table(specs["register"]) %}
						{%= submit(false) %}
					</form>
				</div>
			</div>
		{% else %}
			{%= tabButts([]string{f["ops"][0], f["identity"][0]}) %}
			<div class="tab-cont">
				<div class="tab-sel" data-id="0">
					<a class="form-selection-link" id="logout">
						{%s lang.GT("logout") %},{% space %}{%s ss.UserID %}
					</a>
					<a class="form-selection-link" id="logoutAll">
						{%s lang.GT("logoutAll") %}
					</a>
					<a class="form-selection-link" id="changePassword">
						{%s lang.GT("changePassword") %}
					</a>
					{% if ss.Positions.AnyBoard >= auth.BoardOwner %}
						<a class="form-selection-link" href="/admin/" target="_blank">
							{%s lang.GT("configureBoard") %}
						</a>
					{% endif %}
					{% if ss.Positions.CurBoard == auth.Admin %}
						<a class="form-selection-link" id="createBoard">
							{%s lang.GT("createBoard") %}
						</a>
						<a class="form-selection-link" id="configureServer">
							{%s lang.GT("configureServer") %}
						</a>
					{% endif %}
				</div>
				<div class="account-identity-tab" data-id="1"></div>
			</div>
		</div>
		{% endif %}
	</div>
{% endstripspace %}{% endfunc %}

{% func optionsModal() %}{% stripspace %}
	{% code ln := lang.Get() %}
	<div id="options" class="modal">
		{%= tabButts(ln.Tabs) %}
		<div class="tab-cont">
			{% for i, sp := range optionSpecs %}
				<div data-id="{%d i %}"{% if i == 0 %}{% space %}class="tab-sel"{% endif %}>
					{%= options(sp, ln) %}
				</div>
			{% endfor %}
		</div>
	</div>
{% endstripspace %}{% endfunc %}
